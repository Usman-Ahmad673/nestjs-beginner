name: Deploy Docker Compose to EC2
run-name: ${{ github.actor }} is deploying via Docker Compose ðŸš€

on:
  push:
    branches:
      - feat/redis

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log latest commit hash
        run: echo "The latest commit hash is ${{ github.sha }}"

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/nestjsapp:${{ github.sha }}

      - name: Set up SSH key
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > usman-aws.pem
          chmod 600 usman-aws.pem

      - name: Transfer Docker Compose file
        run: |
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          ssh-keyscan -H 54.167.229.193 >> ~/.ssh/known_hosts
          scp -i usman-aws.pem -o StrictHostKeyChecking=no docker-compose.yml ubuntu@54.167.229.193:/home/ubuntu/docker-compose.yml

      - name: Deploy using Docker Compose
  run: |
    ssh -i usman-aws.pem -o StrictHostKeyChecking=no ubuntu@54.167.229.193 << 'EOF'
      # Install Docker and Docker Compose if not installed
      if ! command -v docker &> /dev/null
      then
          sudo apt update
          sudo apt install -y docker.io
          sudo systemctl start docker
          sudo systemctl enable docker
      fi

      if ! command -v docker-compose &> /dev/null
      then
          sudo curl -L "https://github.com/docker/compose/releases/download/2.20.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
      fi

      # Set up environment variable for dynamic image
      export APP_IMAGE="${{ secrets.DOCKERHUB_USERNAME }}/nestjsapp:${{ github.sha }}"

      # Navigate to the location of docker-compose.yml
      cd /home/ubuntu

      # Pull images and start services
      docker-compose down || true
      docker-compose pull
      docker-compose up -d
    EOF
